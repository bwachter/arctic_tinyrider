* Arctic Tinyrider                                                    :TOC_4:
  - [[#introduction][Introduction]]
  - [[#transmitter-setup][Transmitter setup]]
  - [[#wiring][Wiring]]

** Introduction
This is a program to provide more fine grained control for the [[https://www.printables.com/model/114300-arctic-tinyrider-rc-snowmobile][Arctic Tinyrider RC snowmobile]]. It uses an Arduino to talk to the receiver module via the iBus protocol - which requires a compatible receiver (typically FlySky).

My setup uses:

- one Arduino nano
- one FS-A8S receiver

For full functionality this assumes using a receiver with 8 channels, though some features can be disabled, making it work on receivers with 6 and even 4 channels.

Features are:

- throttle and steering (obviously)
- ignition switch: throttle is pinned to zero unless ignition switch is on. This allows somewhat safer handling when not fully switched off. A LED connected to D13 will signal throttle state by blinking (off) or solid light (on).
- control remapping: a three state switch can be used to change controls
- dynamic speed control: a dial can be used to limit the speed without having to change the throttle curve in the transmitter. In the default setting the transmitter starts with 50% output, and can be set up to 100%.

The last three features can be disabled at compile time, freeing up channels.

Default control setup uses the left stick up/down for throttle, right stick sideways for steering. The second switch position of the control switch flips sticks - note that the right stick centers in all directions, so when switching to that a speed controller without reverse will be running at half throttle already. The third switch position will put both throttle and steering on the right switch.

Planned work includes:
- support some more LEDs
- support failsafe modes in transmitters which have that

** Transmitter setup

To use all features your transmitter should have the channels configured like this:

1. right stick, left/right
2. right stick, up/down
3. left stick, up/down (range changes based on throttle curve)
4. left stick, left/right
5. left dial VRA
6. right dial VRB
7. SWA
8. SWC

VRA/VRB are configured on channels 5/6 per default in 'aux channel setup', while the switches are not assigned. VRB is currently not used - to make this work with a 6 channel receiver remove the VRB mapping, decide which of the 3 additional features you want to drop, adjust mappings for channel 5/6, and adjust the source code.

Note that both throttle curve and trim settings will mess with the values sent by the transmitter - and probably should all be disabled.

** Wiring

You'll need one power and one ground bar to connect everything to. A cheap variant would be two pin headers with a wire soldered over the pins.

The three-pin connector from the ESC connects to power bar, ground bar, and pin D3 on the Arduino.

The servo connects to power bar, ground bar, and pin D10 on the Arduino.

Depending on your receiver you may have dedicated VCC/ground connectors, if not just connect power and ground from any channel to power/ground bars. Connect the iBus pin to the RX pin on the Arduino. Note that when flashing via USB this pin must be disconnected while flashing.

On the Arduino connect ground and VIN to ground/power bars.

The following table contains the basic setup. If you don't want to add any LEDs you can skip the link part, otherwise it is sensible to provide a ground pin to connect to a separate ground bar for additional LEDs. When using LEDs drawing more than 20ÂµA or more than two for one effect they'll have to be switched via transistor and powered via the ESC, in which case it also makes sense to lead out a power bar:

|          | GND | 5v | arduino |
|----------+-----+----+---------|
| ESC      | x   | x  | D3      |
| receiver | x   | x  | RX      |
| arduino  | x   | x  |         |
| servo    | x   | x  | D10     |
| link     | x   | x  |         |

When adding LEDs the default pins are in this table. D13 is also the LED mounted on the Arduino, so if this one is visible no external LEDs are needed. If it is not visible at least one status-LED should be connected for safety - this LED signals throttle lock or error conditions. In a full LED setup the status LEDs should be used as rear lights.

|        | Pin 1 | Pin 2 |
|--------+-------+-------|
| status | D13   | D2    |
| front  | D11   | D12   |
| effect | D4    | D5    |

Pins are set up to minimise gaps, soldering three three-pin-headers will cover all pins on one side, while connecting the unused RST pin. On the other side just VIN and D13 need to be populated.
